#!/usr/bin/env sh

# creating a script to tell battery level with distro logo

# create and set part <<<
create_and_set() {
	original_image=$1
	battery_percentage=$2
	battery_status=$3
	image_size=`identity-format '%wx%h' $original_image`

	if [[ "$battery_status" == "Charging" ]]; then
		color='#FFFF00'
	else
		if [ "$battery_percentage" -ge 30 ]; then
			color='#5BC236'
		else
			color='#BF131C'
		fi
	fi

	convert $original_image \
		\( +clone -gravity South -crop x$battery_percentage% -fuzz 50% \) \
		\(-fill $color -opaque '#8FBCBB' -background transparent -extent $image_size \) \
		-gravity Center -composite -background '#2E3340' -extent 3840x2160 "$tmp_directory"/background.png

	feh --no-fehbg --bg-scale "$tmp_directory"/bat_background.png
}
# >>>

# get_battery <<<
find_battery_path() {
	local file
	for file in /sys/class/power_supply/*; do
		read power_supply < "$file"/type
		if [ "$power_supply" = "Battery" ]; then
			# declare is a shell reserved word
			declare -r battery_found=1
			echo "$file"
			break
		fi
	done
}
# >>>

tmp_directory=/tmp/bin
mkdir -p $tmp_directory
battery_path=$(find_battery_path)
last_capacity=`< $battery_path/capacity`
last_status=`< $battery_path/status`
create_and_set $file $last_capacity $last_status

while true
do
	current_capacity=`< $battery_path/capacity`
	current_status=`< $battery_path/status`

	if [[ "$current_capacity" != "$last_capacity" ]] || [[ "$current_status" != "$last_status" ]]
	then
		create_and_set $file $current_capacity $current_status
		last_capacity=$current_capacity
		last_status=$current_status
	fi
	sleep 5
done

# Note: Script isn't working correctly
